{
  "version": 3,
  "sources": ["../../vuetify/src/components/VForm/VForm.tsx"],
  "sourcesContent": ["// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { ref } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const VForm = genericComponent()({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return forwardRefs(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAWO,IAAMA,QAAQC,iBAAgB,EAAG;EACtCC,MAAM;EAENC,OAAO;IACL,GAAGC,cAAa;EAClB;EAEAC,OAAO;IACL,qBAAsBC,SAAwB;IAC9CC,QAASC,OAA0B;EACrC;EAEAC,MAAON,OAAK,MAAmB;AAAA,QAAjB;MAAEO;MAAOC;IAAK,IAAC;AAC3B,UAAMC,OAAOC,WAAWV,KAAK;AAC7B,UAAMW,UAAUC,IAAG;AAEnB,aAASC,QAASR,GAAU;AAC1BA,QAAES,eAAc;AAChBL,WAAKM,MAAK;IACZ;AAEA,aAASC,SAAUC,IAAW;AAC5B,YAAMZ,IAAIY;AAEV,YAAMC,QAAQT,KAAKU,SAAQ;AAC3Bd,QAAEe,OAAOF,MAAME,KAAKC,KAAKH,KAAK;AAC9Bb,QAAEiB,QAAQJ,MAAMI,MAAMD,KAAKH,KAAK;AAChCb,QAAEkB,UAAUL,MAAMK,QAAQF,KAAKH,KAAK;AAEpCV,WAAK,UAAUH,CAAC;AAEhB,UAAI,CAACA,EAAEmB,kBAAkB;AACvBN,cAAME,KAAK,WAAe;;AAAA,cAAd;YAAEK;UAAM,IAAC;AACnB,cAAIA,OAAO;AACTd,0BAAQe,UAARf,mBAAeP;UACjB;QACF,CAAC;MACH;AAEAC,QAAES,eAAc;IAClB;AAEAa,cAAU,MAAA;;AAAA,yBAAA,QAAA;QAAA,OAEAhB;QAAO,SACP;QAAQ,cAAA;QAAA,WAEJE;QAAO,YACNG;MAAQ,GAAA,EAEjBT,WAAMqB,YAANrB,+BAAgBE,KAAK,CAAA;KAEzB;AAEF,WAAOoB,YAAYpB,MAAME,OAAO;EAClC;AACF,CAAC;",
  "names": ["VForm", "genericComponent", "name", "props", "makeFormProps", "emits", "val", "submit", "e", "setup", "slots", "emit", "form", "createForm", "formRef", "ref", "onReset", "preventDefault", "reset", "onSubmit", "_e", "ready", "validate", "then", "bind", "catch", "finally", "defaultPrevented", "valid", "value", "useRender", "default", "forwardRefs"]
}
